name: 'Stable Deploy CI (Maven)'

on:
  push:
    branches: [ stable/** ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/stable/')
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Remove snapshots
        run: mvn versions:set -DremoveSnapshot=true -DgenerateBackupPoms=false
      - name: Build with Maven
        run: mvn -DskipTests -Dcheckstyle.skip=true package
      - name: Calculate tags
        if: success()
        id: tagcalc
        run: |
          # Create tag
          tag=$(grep "version=" airsonic-main/target/generated/build-metadata/build.properties | cut -d"=" -f2);
          minor=$(echo $tag | cut -d"." -f1-2);
          major=$(echo $minor | cut -d"." -f1);
          echo $tag;
          echo "tag=$tag" >> $GITHUB_OUTPUT
          echo "minor=$minor" >> $GITHUB_OUTPUT
          echo "major=$major" >> $GITHUB_OUTPUT
      - name: Import GPG Key for signing
        run: echo "${{ secrets.GPG_SIGNING_PRIVATE_KEY }}" | gpg --quiet --batch --yes --import
      - name: Sign artifacts
        run: |
          echo "${{ secrets.GPG_SIGNING_PASSPHRASE }}" | gpg --quiet --batch --yes --pinentry-mode loopback --clearsign --passphrase-fd 0 airsonic-main/target/artifacts-checksums.sha;
      - name: Deploy to GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tagcalc.outputs.tag }}
          name: Stable Release ${{ steps.tagcalc.outputs.tag }}
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            List of issues addressed: https://github.com/kagemomiji/airsonic-advanced/issues?q=milestone%3A${{ steps.tagcalc.outputs.tag }}
          files: |
            airsonic-main/target/airsonic.war
            airsonic-main/target/artifacts-checksums.sha.asc
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: mkdir -p install/docker/target/dependency
      - run: cp airsonic-main/target/airsonic.war install/docker/target/dependency/airsonic-main.war
      - name: Build and push multiplatform images to Dockerhub
        uses: docker/build-push-action@v6
        with:
          file: install/docker/Dockerfile
          context: install/docker
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            ghcr.io/kagemomiji/airsonic-advanced:stable
            ghcr.io/kagemomiji/airsonic-advanced:stable-latest
            ghcr.io/kagemomiji/airsonic-advanced:stable-${{ steps.tagcalc.outputs.tag }}
            ghcr.io/kagemomiji/airsonic-advanced:${{ steps.tagcalc.outputs.tag }}
            ghcr.io/kagemomiji/airsonic-advanced:gitcommit-${{ github.sha }}
            ghcr.io/kagemomiji/airsonic-advanced:gitrun-${{ github.run_id }}
